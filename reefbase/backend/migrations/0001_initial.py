# Generated by Django 4.0.3 on 2022-11-25 18:30

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation', models.CharField(max_length=32, null=True)),
                ('set_new_password', models.CharField(max_length=32, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('regnum', models.CharField(max_length=50, verbose_name='Królestwo')),
                ('phylum', models.CharField(max_length=50, verbose_name='Typ')),
                ('classis', models.CharField(max_length=50, verbose_name='Gromada')),
                ('ordo', models.CharField(max_length=50, verbose_name='Rząd')),
                ('familia', models.CharField(max_length=50, verbose_name='Rodzina')),
                ('genus', models.CharField(max_length=50, verbose_name='Rodzaj')),
                ('species', models.CharField(max_length=100, unique=True, verbose_name='Gatunek')),
                ('category', models.CharField(max_length=30, verbose_name='Kategoria')),
                ('size', models.FloatField(default=0, verbose_name='Wielkość')),
                ('min_tank', models.IntegerField(default=0, verbose_name='Minimalna pojemność akwarium')),
                ('distribution', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None, verbose_name='Występowanie')),
                ('food', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None, verbose_name='Pożywienie')),
                ('picky_eater', models.BooleanField(verbose_name='Specjalista pokarmowy')),
                ('reefsafe', models.BooleanField(verbose_name='Bezpieczny dla rafy')),
                ('image', models.ImageField(upload_to='species')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('accepted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_species', to=settings.AUTH_USER_MODEL)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_species', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MistakeReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('served', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_mistakes', to=settings.AUTH_USER_MODEL)),
                ('served_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='served_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('parent', models.IntegerField(null=True)),
                ('reply_to', models.IntegerField(null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_comments', to=settings.AUTH_USER_MODEL)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='backend.species')),
            ],
        ),
    ]
